#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void sort(char**, int*, int);
void sort_length(char**, int*, int);
void swap(char**, int*, int);

int main()
{
    int n;
    char temp;
    char** ary;
    int* size;

    scanf("%d", &n);
    scanf("%c", &temp);

//ary초기화
    ary = (char**)malloc(sizeof(char*) * n);
    size = (int*)malloc(sizeof(int) * n);
    for(int i = 0; i < n; i++)
    {
        ary[i] = (char*)malloc(sizeof(char) * 52);
        for(int j = 0; ; j++)
        {
            scanf("%c", &ary[i][j]);
            if(ary[i][j] == '\n')
            {
                ary[i][j] = '\0';
                size[i] = j;
                break;
            }
        }
    }

    sort(ary, size, n);


//ary출력
    for(int i = 0; i < n; i++)
    {
        if(ary[i][51] != 'x')
        {
            printf("%s %d\n", ary[i], size[i]);
        }
        else
        {
            printf("same i : %d\n", i);
        }
    }



//할당해제
    for(int i = 0; i < n; i++)
    {
        free(ary[i]);
    }
    free(ary);
    free(size);

    return 0;
}

void sort(char** ary, int* size, int n)
{
    sort_length(ary, size, n);
    
    return;
}

void sort_length(char** ary, int* size, int n)
{
    for(int i = 0; i < n - 1; i++)
    {
        for(int j = 0; j < n - i - 1; j++)
        {
            if(size[j] > size[j + 1])
            {
                swap(ary, size, j);
            }
            else if(size[j] == size[j + 1])
            {
                if(strcmp(ary[j], ary[j + 1]) > 0)
                {
                    swap(ary, size, j);
                }
                else if(strcmp(ary[j], ary[j + 1]) == 0)
                {
                    ary[j + 1][51] = 'x';
                }
            }
        }
    }

    return;
}

void swap(char** ary, int* size, int j)
{
    char temp[51];
    strcpy(temp, ary[j]);
    strcpy(ary[j], ary[j + 1]);
    strcpy(ary[j + 1], temp);

    int z = size[j];
    size[j] = size[j + 1];
    size[j + 1] = z;

    return;
}
